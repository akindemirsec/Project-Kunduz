import requests
import psycopg2
from psycopg2 import sql
import json

# PostgreSQL database connection settings
DB_HOST = "db"
DB_NAME = "kunduz"
DB_USER = "user"
DB_PASS = "password"

# NVD API settings
NVD_API_URL = "https://services.nvd.nist.gov/rest/json/cves/2.0"
NVD_API_KEY = "d40d0561-f671-4ada-8f23-74a06c07b918"  # Your NVD API key

def download_cve_data():
    try:
        headers = {
            'apiKey': NVD_API_KEY
        }
        params = {
            'resultsPerPage': 2000  # Adjust this number based on your needs and API limits
        }
        response = requests.get(NVD_API_URL, headers=headers, params=params)
        response.raise_for_status()
        cve_data = response.json()
        with open('/app/nvd_cve.json', 'w') as file:
            json.dump(cve_data, file)
        print("CVE data downloaded successfully.")
    except requests.exceptions.RequestException as e:
        print(f"Failed to download CVE data: {e}")

def parse_cve_data(filename):
    with open(filename, 'r') as file:
        cve_data = json.load(file)
    cve_items = []
    for entry in cve_data['vulnerabilities']:
        cve_id = entry['cve']['id']
        description = entry['cve']['descriptions'][0]['value']
        cve_items.append((cve_id, description))
    return cve_items

def insert_cve_data(cve_data):
    conn = psycopg2.connect(
        dbname=DB_NAME, user=DB_USER, password=DB_PASS, host=DB_HOST)
    cursor = conn.cursor()

    for cve_id, description in cve_data:
        cursor.execute(
            sql.SQL("INSERT INTO cves (cve_id, description) VALUES (%s, %s) ON CONFLICT (cve_id) DO NOTHING"),
            [cve_id, description]
        )

    conn.commit()
    cursor.close()
    conn.close()

if __name__ == "__main__":
    download_cve_data()
    cve_data = parse_cve_data('/app/nvd_cve.json')
    insert_cve_data(cve_data)
    print("CVE database updated.")
